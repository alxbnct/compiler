name: Build

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

env:
  ghc: "9.4.8"
  cabal: "3.8.1.0"

jobs:
  validate-code-formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install devbox
        uses: jetify-com/devbox-install-action@v0.11.0
        with:
          enable-cache: true

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: npm-ubuntu-latest-${{ hashFiles('devbox.lock', 'package-lock.json') }}

      - name: Install dependencies
        run: devbox run -- npm install

      - name: Validate formatting
        run: devbox run format:check

  linux:
    runs-on: ubuntu-latest
    container: alpine:3.17
    needs: validate-code-formatting

    steps:
      - name: Install deps
        run: apk add alpine-sdk autoconf gcc gmp gmp-dev libffi libffi-dev llvm15 make musl-dev ncurses-dev ncurses-static tree wget zlib-dev zlib-static curl

      - uses: actions/checkout@v4

      - name: Install GHCup
        run: curl https://downloads.haskell.org/~ghcup/0.1.30.0/x86_64-linux-ghcup-0.1.30.0 -o /usr/local/bin/ghcup && chmod a+x /usr/local/bin/ghcup

      - name: Cache ghcup
        uses: actions/cache@v4
        with:
          path: ~/.ghcup
          key: ghcup-linux-${{ env.ghc }}

      - name: Install Haskell
        run: ghcup install ghc ${{ env.ghc }} --set && ghcup install cabal ${{ env.cabal }} --set

      - name: Update PATH
        run: echo "$HOME/.ghcup/bin" >> $GITHUB_PATH

      - name: Cabal update
        run: cabal update

      - name: List exact cabal deps
        run: |
          cabal freeze --only-dependencies
          sed -i '$ d' cabal.project.freeze

      - name: Cache cabal store
        uses: actions/cache@v4
        with:
          path: ~/.cabal/store
          key: deps-linux-${{ env.ghc }}-${{ hashFiles('cabal.project.freeze') }}

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: dist-newstyle
          key: dist-linux-${{ env.ghc }}-${{ github.sha }}
          restore-keys: dist-linux-${{ env.ghc }}-

      - name: Configure
        run: cabal configure --enable-tests --enable-executable-static --ghc-option=-split-sections -O2

      - name: Build
        run: cabal build

      - name: Tests
        run: cabal test

      - name: Move binary
        run: cp `cabal list-bin .` ./gren

      - name: Strip
        run: strip gren

      - uses: actions/upload-artifact@v4
        with:
          name: gren_linux
          path: gren
          retention-days: 14

  mac:
    needs: validate-code-formatting
    strategy:
      matrix:
        os: [macos-13, macos-14]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install devbox
        uses: jetify-com/devbox-install-action@v0.11.0
        with:
          enable-cache: true

      - name: Update cabal registry
        run: devbox run -- cabal update

      - name: List exact cabal deps
        run: |
          cabal freeze --only-dependencies
          sed -i '$ d' cabal.project.freeze

      - name: Cache cabal store
        uses: actions/cache@v4
        with:
          path: ~/.cabal/store
          key: deps-${{ matrix.os }}-${{ hashFiles('devbox.lock', 'cabal.project.freeze') }}

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: dist-newstyle
          key: dist-${{ matrix.os }}-${{ github.sha }}
          restore-keys: dist-${{ matrix.os }}-

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: npm-${{ matrix.os }}-${{ hashFiles('devbox.lock', 'package-lock.json') }}

      - name: Install npm dependencies
        run: devbox run -- npm install

      - name: Configure
        run: devbox run -- cabal configure --enable-tests -O2

      - name: Build
        run: devbox run -- cabal build

      - name: Tests
        run: devbox run test

      - name: Move binary
        run: cp `devbox run -- cabal list-bin .` ./gren

      - uses: actions/upload-artifact@v4
        with:
          name: gren-${{ matrix.os }}
          path: gren
          retention-days: 14

  windows:
    runs-on: windows-latest
    needs: validate-code-formatting

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - id: setup-haskell
        uses: haskell-actions/setup@v2
        with:
          ghc-version: ${{ env.ghc }}
          cabal-version: ${{ env.cabal }}

      - name: List exact cabal deps
        run: |
          cabal freeze --only-dependencies
          sed -i '$ d' cabal.project.freeze

      - name: Cache cabal store
        uses: actions/cache@v4
        with:
          path: ${{ steps.setup-haskell.outputs.cabal-store }}
          key: deps-win-${{ env.ghc }}-${{ hashFiles('cabal.project.freeze') }}

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: dist-newstyle
          key: dist-win-${{ env.ghc }}-${{ github.sha }}
          restore-keys: dist-win-${{ env.ghc }}-

      - name: Configure
        run: cabal configure --enable-tests -O2

      - name: Build
        run: cabal build

      - name: Tests
        run: cabal test

      - name: Move binary
        run: cp `cabal list-bin .` ./gren

      - name: Strip
        run: strip gren

      - uses: actions/upload-artifact@v4
        with:
          name: gren.exe
          path: gren
          retention-days: 14
